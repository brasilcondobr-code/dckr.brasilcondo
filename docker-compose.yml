services:
  app:
    # Usa o Dockerfile do devcontainer que está preparado para Bedrock
    build:
      context: ./public/app_wp/.devcontainer
      dockerfile: Dockerfile
    volumes:
      # Mapeia o projeto Bedrock para o diretório /roots/app dentro do container
      - ./public/app_wp:/roots/app
      - ./public/app_wp/.devcontainer/config/php.ini:/usr/local/etc/php/conf.d/bedrock.ini
    depends_on:
      - database
    env_file:
      - .env
    container_name: dckrbrasilcondo-app-php

  web:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      # Mapeia o projeto Bedrock (somente leitura)
      - ./public/app_wp:/roots/app:ro
      # Usa a configuração Nginx correta para Bedrock
      - ./public/app_wp/.devcontainer/config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    container_name: dckrbrasilcondo-web-nginx

  database:
    image: mariadb:11
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    container_name: dckrbrasilcondo-db-mariadb

  phpmyadmin:
    image: phpmyadmin:latest
    env_file:
      - .env
    ports:
      - "8081:80"
    depends_on:
      - database
    container_name: dckrbrasilcondo-pma

volumes:
  mysql-data: