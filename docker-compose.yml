services:
  # Serviço do Banco de Dados: MySQL
  db:
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  # Serviço do PHP
  php:
    build: ./php # Constrói a imagem a partir da pasta ./php
    restart: unless-stopped
    volumes:
      - ./application:/var/www/html # Mapeia a pasta do projeto para dentro do container
    environment:
      DB_HOST: db
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PASSWORD}
    networks:
      - app-network
    depends_on:
      - db

  # Serviço do Servidor Web: Nginx
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80" # Expõe a porta 80 do container na porta 80 da sua máquina
    volumes:
      - ./application:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # Configuração do Nginx
    depends_on:
      - php
    networks:
      - app-network

  # Serviço de Gerenciamento do DB: phpMyAdmin
  phpmyadmin:
    image: phpmyadmin:latest
    restart: unless-stopped
    ports:
      - "8080:80" # Acessível em http://localhost:8080
    environment:
      PMA_HOST: db # Aponta para o nosso serviço de banco de dados
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local
